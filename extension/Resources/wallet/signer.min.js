function exceptionToString(b){var a="";for(var c in b){a+="property: "+c+" value: ["+b[c]+"]\n"}return"toString():  value: ["+b.toString()+"]"}function generateNewMiniPrivateKey(){while(true){var c=new Bitcoin.ECKey(false);var b="S"+Bitcoin.Base58.encode(c.priv).substr(0,21);var f=Crypto.SHA256(b+"?",{asBytes:true});if(f[0]==0){var a=Crypto.SHA256(b,{asBytes:true});var d=new Bitcoin.ECKey(a);if(MyWallet.addPrivateKey(d)){return{key:d,miniKey:b}}}}}try{if(typeof window=="undefined"||!window){importScripts("/Resources/wallet/bitcoinjs.min.js");self.addEventListener("message",function(d){var c=d.data;switch(c.cmd){case"sign_input":try{var a=new Bitcoin.Transaction(c.tx);var b=new Bitcoin.Script(c.connected_script);var f=signInput(a,c.outputN,c.priv_to_use,b);if(f){self.postMessage({cmd:"on_sign",script:f,outputN:c.outputN})}else{throw"Unknown Error Signing Script "+c.outputN}}catch(d){self.postMessage({cmd:"on_error",e:exceptionToString(d)})}break;default:self.postMessage({cmd:"on_error",e:"Unknown Command"})}},false)}}catch(e){}Bitcoin.Transaction.prototype.addOutputScript=function(a,b){if(arguments[0] instanceof Bitcoin.TransactionOut){this.outs.push(arguments[0])}else{if(b instanceof BigInteger){b=b.toByteArrayUnsigned().reverse();while(b.length<8){b.push(0)}}else{if(Bitcoin.Util.isArray(b)){}}this.outs.push(new Bitcoin.TransactionOut({value:b,script:a}))}};function showPrivateKeyModal(f,a,g){var c=$("#private-key-modal");c.modal({keyboard:true,backdrop:"static",show:true});c.center();c.find(".address").text(g);var d=null;var b=null;loadScript("wallet/llqrcode.js",function(){loadScript("wallet/qr.code.reader.js",function(){var h=initQRCodeReader("qr-code-reader",function(i){try{d=MyWallet.privateKeyStringToKey(i,MyWallet.detectPrivateKeyFormat(i));if(d==null){throw"Error decoding private key"}}catch(j){b="Error decoding private key "+j}c.modal("hide");if(d){f(d)}else{a(b)}clearInterval(h)},resource+"wallet/")})});c.find(".btn.btn-primary").unbind().click(function(){var h=c.find('input[name="key"]').val();try{if(h.length==0){throw"You must enter a private key to import"}d=MyWallet.privateKeyStringToKey(h,MyWallet.detectPrivateKeyFormat(h));if(d==null){throw"Could not decode private key"}}catch(i){b="Error importing private key "+i}c.modal("hide");if(d){f(d)}else{a(b)}});c.find(".btn.btn-secondary").unbind().click(function(){c.modal("hide");a("User Cancelled")})}function resolveAddress(a){a=$.trim(a);try{return new Bitcoin.Address(a).toString()}catch(f){}a=a.toLowerCase();var h=MyWallet.getAddressBook();for(var c in h){var d=MyWallet.getAddressBookLabel(c);if(d.toLowerCase()==a){return $.trim(c)}}var g=MyWallet.getAllAddresses();for(var b=0;b<g.length;++b){var c=g[b];var d=MyWallet.getAddressLabel(c);if(d&&d.toLowerCase()==a){return c}}return null}function startTxUI(a,j,f,c){function l(){a.find('input[name="send-value"]').val("");a.find('input[name="send-to-address"]').val("")}try{var g=0;a.find('input[name="send-value"]').each(function(){g+=parseFloat($(this).val())});var d=true;if(g>10){if(j=="email"||j=="sms"){throw"Cannot Send More Than 10 BTC via email or sms"}else{if(j=="quick"){j="custom";d=false}}}else{if(j=="anonymous"&&g<0.5){throw"The Minimum Amount You Can Send Anonymously is 0.5 BTC"}}if(MyWallet.getMixerFee()<0&&(j=="custom"||j=="quick")&&g>=5&&getCookie("anonymous-never-ask")!="true"&&!c){var i=getCookie("anonymous-accepted-time");if(!i||parseInt(i)<new Date().getTime()-43200000){var m=$("#ask-for-anonymous");m.find(".bonus-percent").text(-MyWallet.getMixerFee());m.find(".bonus-value").text((g/100)*-MyWallet.getMixerFee());var k=m.find(".delay");if(g<=10){k.text("20 Seconds")}else{if(g<=25){k.text("10 Minutes")}else{if(g<=250){k.text("20 Minutes")}else{k.text("1 hour")}}}m.modal({keyboard:false,backdrop:"static",show:true});m.find(".btn.btn-primary").unbind().click(function(){var n=startTxUI(a,"anonymous",f);n.addListener({on_success:function(){SetCookie("anonymous-accepted-time",new Date().getTime())}});m.modal("hide")});m.find(".btn.btn-secondary").unbind().click(function(){m.modal("hide");startTxUI(a,j,f,true)});return}}var b={};if(j=="custom"||j=="anonymous"){var b={on_error:function(n){if(this.modal){this.modal.modal("hide")}},on_success:function(){l()},on_start:function(){var n=this;this.modal=$("#new-transaction-modal");this.modal.modal({keyboard:false,backdrop:"static",show:true});this.modal.find(".offline-transaction").hide();this.modal.find("#missing-private-key").hide();this.modal.find("#review-tx").hide();this.modal.find(".modal-header h3").html("Creating transaction");this.modal.find("#tx-sign-progress").hide();this.modal.find(".btn.btn-primary").attr("disabled",true);this.modal.find(".btn.btn-primary").text("Send Transaction");this.modal.find(".btn.btn-secondary").unbind().click(function(){n.modal.modal("hide");n.cancel()})},on_begin_signing:function(){$("#tx-sign-progress").show().find(".t").text(this.tx.ins.length)},on_sign_progress:function(n){$("#tx-sign-progress").find(".n").text(n)},on_finish_signing:function(){$("#tx-sign-progress").hide()}};f.addListener(b);if(d){f.ask_for_fee=function(q,p){var n=this;n.modal.modal("hide");var o=$("#ask-for-fee");o.modal({keyboard:false,backdrop:"static",show:true});o.find(".btn.btn-primary").unbind().click(function(){o.modal("hide");q()});o.find(".btn.btn-secondary").unbind().click(function(){o.modal("hide");p()});o.unbind().on("hidden",function(){n.modal.modal("show")})}}f.ask_to_send=function(){var n=this;try{n.modal.find(".modal-header h3").html(n.ready_to_send_header);n.modal.find("#missing-private-key").hide();n.modal.find("#review-tx").show();setReviewTransactionContent(n.modal,n.tx,n.type);setAdv(false);n.modal.center();var o=n.modal.find(".btn.btn-primary");MyWallet.setLoadingText("Checking Connectivity");$.get(root+"ping?"+new Date().getTime()).success(function(q){o.attr("disabled",false);o.text("Send Transaction");o.unbind().click(function(){o.attr("disabled",true);n.modal.modal("hide");n.send()})}).error(function(q){n.modal.find(".modal-header h3").html("Created Offline Transaction.");o.attr("disabled",false);o.text("Show Offline Instructions");o.unbind().click(function(){o.attr("disabled",true);n.modal.find("#missing-private-key").hide();n.modal.find("#review-tx").hide();n.modal.find(".offline-transaction").show();var r=n.tx.serialize();var t=Crypto.util.bytesToHex(r);n.modal.find('.offline-transaction textarea[name="data"]').val(t)});n.modal.center()})}catch(p){n.error(p)}}}else{if(j=="quick"||j=="email"||j=="dice"||j=="sms"){var b={on_error:function(n){a.find(".send").show();if(this.p){this.p.hide()}},on_success:function(){try{a.find(".send").show();if(j!="dice"){l()}if(this.p){this.p.hide()}}catch(n){console.log(n)}},on_start:function(){this.p=a.find(".progress");a.find(".send").hide();this.p.show();this.p.children().css("width","10%")},on_begin_signing:function(){this.p.children().css("width","25%")},on_sign_progress:function(n){this.p.children().css("width",25+((100/this.tx.ins.length)*n)+"%")},on_finish_signing:function(){this.p.children().css("width","100%")}};f.addListener(b);if(j=="sms"){f.ask_to_send=function(){try{var n=this;MyWallet.securePost("send-via",{type:"sms",to:n.sms_data.number,priv:n.sms_data.miniKey,hash:Crypto.util.bytesToHex(n.tx.getHash().reverse())}).success(function(){n.send()}).error(function(p){n.error(p?p.responseText:null)})}catch(o){n.error(o)}}}else{if(j=="email"){f.ask_to_send=function(){var n=this;var o=$("#send-email-modal");try{MyWallet.securePost("wallet",{method:"get-info"}).success(function(q){try{o.modal({keyboard:true,backdrop:"static",show:true});var s=q.alias;if(s==null){s=q.email}if(s==null){s="Anonymous"}o.find(".amount").text(formatBTC(n.email_data.amount.toString()));o.find(".email").text(n.email_data.email);o.find(".frame").html('<iframe frameBorder="0" style="box-sizing:border-box;width:100%;height:100%" src="'+root+"email-template?from_name="+s+"&amount="+n.email_data.amount+'&priv=Preview&type=send-bitcoins-get"></iframe>');o.find(".btn.btn-secondary").unbind().click(function(){n.cancel();o.modal("hide")});o.find(".btn.btn-primary").unbind().click(function(){o.modal("hide");try{MyWallet.securePost("send-via",{type:"email",to:n.email_data.email,priv:n.email_data.priv,hash:Crypto.util.bytesToHex(n.tx.getHash().reverse())}).success(function(u){n.send()}).error(function(u){n.error(u?u.responseText:null)})}catch(t){n.error(t)}})}catch(r){o.modal("hide");n.error(r)}}).error(function(q){o.modal("hide");n.error("Error Getting Account Data")})}catch(p){o.modal("hide");n.error(p)}}}}}}f.ask_for_private_key=function(p,o,q){var n=this;if(n.modal){n.modal.modal("hide")}showPrivateKeyModal(function(r){if(n.modal){n.modal.modal("show")}p(r)},function(r){if(n.modal){n.modal.modal("show")}o(r)},q)};f.type=j;if(MyWallet.getFeePolicy()==1){f.fee=BigInteger.valueOf(100000)}else{if(MyWallet.getFeePolicy()==-1){f.ask_for_fee=function(o,n){n()}}}MyWallet.getSecondPassword(function(){try{var o=a.find('select[name="from"]');var t=o.val();if(t==null||t=="any"){f.from_addresses=MyWallet.getActiveAddresses()}else{if(o.attr("multiple")=="multiple"){f.from_addresses=t}else{f.from_addresses=[t]}}var w=a.find('textarea[name="public-note"]').val();if(w!=null&&w.length>0){if(w.length>255){throw"Notes are restricted to 255 characters in length"}f.note=w}var s=$.trim(a.find('select[name="change"]').val());if(s.length>0){if(s=="new"){var x=MyWallet.generateNewKey();var q=x.getBitcoinAddress();f.change_address=q;f.generated_addresses.push(q.toString())}else{if(s!="any"){try{f.change_address=new Bitcoin.Address(s)}catch(v){throw"Invalid change address: "+v}}}}var n=$.trim(a.find('input[name="fees"]').val());if(n!=null&&n.length>0){f.fee=Bitcoin.Util.parseValue(n);if(f.fee.compareTo(BigInteger.ZERO)<0){throw"Fees cannot be negative"}}var p=a.find(".recipient");if(p.length==0){throw"A transaction must have at least one recipient"}var u=p.length;var r=function(){if(u==0){f.error("Nothing to send.");return}if(f.to_addresses.length<u){return}if(f.to_addresses.length>u){f.error("We seem to have more recipients than required. Unknown error");return}f.start()};p.each(function(){try{var z=$(this);var A=z.find('input[name="send-value"]');var L=z.find('input[name="send-to-address"]');var G=z.find('input[name="send-to-email"]');var B=z.find('input[name="send-to-sms"]');var I=0;try{I=Bitcoin.Util.parseValue($.trim(A.val()));if(I==null||I.compareTo(BigInteger.ZERO)<=0){throw"You must enter a value greater than zero"}}catch(E){if(A.data("optional")==true){--u;return true}else{throw"Invalid send amount"}}if(L.length>0){var C=$.trim(L.val()).replace(/[\u200B-\u200D\uFEFF]/g,"");if(C==null||C.length==0){throw"You must enter a bitcoin address for each recipient"}else{var H=resolveAddress(C);if(j=="anonymous"){if(!H){throw"Invalid Bitcoin Address"}MyWallet.setLoadingText("Creating Forwarding Address");MyWallet.securePost("forwarder",{action:"create-mix",address:H}).success(function(N){try{if(N.destination!=H){throw"Mismatch between requested and returned destination address"}if(N.fee_percent!=MyWallet.getMixerFee()){MyWallet.get_history();throw"The mixer fee may have changed"}f.to_addresses.push({address:new Bitcoin.Address(N.input_address),value:I});r()}catch(M){f.error(M)}}).error(function(M){f.error(M?M.responseText:null)})}else{if(H){f.to_addresses.push({address:new Bitcoin.Address(H),value:I})}else{if(C.length<10){BlockchainAPI.resolve_firstbits(C,function(M){try{f.to_addresses.push({address:new Bitcoin.Address(M),value:I});r()}catch(N){f.error(N)}},function(){f.error("Invalid to address: "+C)});return false}else{f.error("Invalid to address: "+C)}}}}}else{if(B.length>0){var D=$.trim(B.val());if(D.charAt(0)=="0"){D=D.substring(1)}if(D.charAt(0)!="+"){D="+"+z.find('select[name="sms-country-code"]').val()+D}var F=generateNewMiniPrivateKey();var H=F.key.getBitcoinAddress().toString();MyWallet.setAddressTag(H,2);MyWallet.setAddressLabel(H,D+" (Sent Via SMS)");f.generated_addresses.push(H);f.to_addresses.push({address:new Bitcoin.Address(H),value:I});if(f.sms_data){throw"Cannot send to more than one SMS recipient at a time"}f.sms_data={number:D,miniKey:F.miniKey}}else{if(G.length>0){var K=$.trim(G.val());function y(O){var N=O.lastIndexOf("@");var M=O.lastIndexOf(".");return(N<M&&N>0&&O.indexOf("@@")==-1&&M>2&&(O.length-M)>2)}if(y(K)){var J=MyWallet.generateNewKey();var H=J.getBitcoinAddress().toString();MyWallet.setAddressTag(H,2);MyWallet.setAddressLabel(H,K+" (Sent Via Email)");f.generated_addresses.push(H);f.to_addresses.push({address:new Bitcoin.Address(H),value:I});if(f.email_data){throw"Cannot send to more than one email recipient at a time"}f.email_data={email:K,priv:B58.encode(J.priv),amount:I}}else{throw"Invalid Email Address"}}}}}catch(E){console.log(E);f.error(E)}});r()}catch(v){f.error(v)}})}catch(h){f.error(h)}return f}function readVarInt(c){var a,b;a=c.splice(0,1)[0];if(a<253){b=[a]}else{if(a==253){b=c.splice(0,2)}else{if(a==254){b=c.splice(0,4)}else{b=c.splice(0,8)}}}return new BigInteger(b)}function readUInt32(a){return new BigInteger(a.splice(0,4).reverse()).intValue()}Bitcoin.Transaction.deserialize=function(k){var m=new Bitcoin.Transaction();m.version=readUInt32(k);var f=readVarInt(k).intValue();for(var l=0;l<f;l++){var g=k.splice(0,32);var c=Crypto.util.bytesToBase64(g);var a=readUInt32(k);var j=readVarInt(k).intValue();var n=new Bitcoin.Script(k.splice(0,j));var d=readUInt32(k);var o=new Bitcoin.TransactionIn({outpoint:{hash:c,index:a},script:n,sequence:d});m.ins.push(o)}var p=readVarInt(k).intValue();for(var l=0;l<p;l++){var b=k.splice(0,8);var j=readVarInt(k).intValue();var n=new Bitcoin.Script(k.splice(0,j));var h=new Bitcoin.TransactionOut({script:n,value:b});m.outs.push(h)}m.lock_time=readUInt32(k);return m};function signInput(j,c,b,m){var a=m.simpleOutPubKeyHash();var d=new Bitcoin.Address(a).toString();var n=new Bitcoin.ECKey(b);var k;if(n.getBitcoinAddress().toString()==d.toString()){k=false}else{if(n.getBitcoinAddressCompressed().toString()==d.toString()){k=true}else{throw"Private key does not match bitcoin address "+d.toString()+" = "+n.getBitcoinAddress().toString()+" | "+n.getBitcoinAddressCompressed().toString()}}var h=parseInt(1);var i=j.hashTransactionForSignature(m,c,h);var g=n.sign(i);var f=Bitcoin.ECDSA.serializeSig(g.r,g.s);f.push(h);var l;if(k){l=Bitcoin.Script.createInputScript(f,n.getPubCompressed())}else{l=Bitcoin.Script.createInputScript(f,n.getPub())}if(l==null){throw"Error creating input script"}return l}function formatAddresses(b,f,a){var g="";if(f.length==1){var c=f[0].toString();if(a&&MyWallet.addressExists(c)&&MyWallet.getAddressLabel(c)){g=MyWallet.getAddressLabel(c)}else{if(a&&MyWallet.getAddressBookLabel(c)){g=MyWallet.getAddressBookLabel(c)}else{g=c}}}else{g="Escrow (<i>";for(var d=0;d<f.length;++d){g+=f[d].toString()+", "}g=g.substring(0,g.length-2);g+="</i> - "+b+" Required)"}return g}function setReviewTransactionContent(r,u,a){$("#rtc-hash").html(Crypto.util.bytesToHex(u.getHash()));$("#rtc-version").html(u.version);$("#rtc-from").html("");$("#rtc-to").html("");var v=BigInteger.ZERO;var t=BigInteger.ZERO;var n=BigInteger.ZERO;var g="send ";var q=true;var c=BigInteger.ZERO;for(var o=0;o<u.ins.length;++o){var k=u.ins[o];t=t.add(k.outpoint.value);n=n.add(k.outpoint.value);var f=null;try{f=new Bitcoin.Address(k.script.simpleInPubKeyHash())}catch(s){f="Unable To Decode Address"}$("#rtc-from").append(f+' <font color="green">'+formatBTC(k.outpoint.value.toString())+" BTC <br />")}var j=true;for(var o=0;o<u.outs.length;++o){var p=u.outs[o];var d=p.value.slice();d.reverse();var w=new BigInteger(d);var h=[];var l=1;try{l=p.script.extractAddresses(h)}catch(s){console.log(s);h.push("Unknown Address!")}$("#rtc-to").append(formatAddresses(l,h)+' <font color="green">'+formatBTC(w.toString())+" BTC </font><br />");v=v.add(w);t=t.subtract(w);if(h.length>1){if(!j){g+=" and "}g+="<b>"+formatBTC(w.toString())+" BTC</b> to "+formatAddresses(l,h,true);q=false;n=n.subtract(w)}else{if(h.length>0){var b=h[0].toString();if(!MyWallet.addressExists(b)||MyWallet.getAddressTag(b)==2){if(w.compareTo(BigInteger.ZERO)==0){continue}if(!j){g+=" and "}if(a&&a=="anonymous"){g+="<b>"+formatBTC(w.toString())+" BTC</b> Anonymously"}else{g+="<b>"+formatBTC(w.toString())+" BTC</b> to "+formatAddresses(1,[b],true)}q=false}else{n=n.subtract(w);c=c.add(w)}}}j=false}if(t.compareTo(BigInteger.valueOf(1).multiply(BigInteger.valueOf(satoshi)))>=0){alert("Warning fees are very high for this transaction. Please double check each output!")}if(q==true){g="move <b>"+formatBTC(v.toString())+" BTC</b> between your own bitcoin addresses"}$("#rtc-basic-summary").html(g);$("#rtc-effect").html("-"+formatBTC(n.toString())+" BTC");$("#rtc-fees").html(formatBTC(t.toString())+" BTC");$("#rtc-value").html(formatBTC(v.toString())+" BTC")}function initNewTx(){var b={generated_addresses:[],to_addresses:[],fee:BigInteger.ZERO,extra_private_keys:[],listeners:[],is_cancelled:false,ask_to_send_anonymously:false,base_fee:BigInteger.valueOf(50000),ready_to_send_header:"Transaction Ready to Send.",addListener:function(c){this.listeners.push(c)},invoke:function(c,f,g){for(var d in this.listeners){if(this.listeners[d][c]){this.listeners[d][c].call(this,f,g)}}},start:function(){var c=this;try{c.invoke("on_start");BlockchainAPI.get_unspent(c.from_addresses,function(k){try{if(c.is_cancelled){throw"Transaction Cancelled"}if(k.unspent_outputs==null||k.unspent_outputs.length==0){throw"No Free Outputs To Spend"}c.unspent=[];for(var h=0;h<k.unspent_outputs.length;++h){var f;try{f=new Bitcoin.Script(Crypto.util.hexToBytes(k.unspent_outputs[h].script))}catch(j){MyWallet.makeNotice("error","misc-error","Error decoding script: "+j);continue}var g={script:f,value:BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(k.unspent_outputs[h].value_hex)),tx_output_n:k.unspent_outputs[h].tx_output_n,tx_hash:k.unspent_outputs[h].tx_hash,confirmations:k.unspent_outputs[h].confirmations};c.unspent.push(g)}c.makeTransaction()}catch(j){c.error(j)}},function(f){c.error(f)})}catch(d){c.error(d)}},makeTransaction:function(){var s=this;try{if(s.is_cancelled){throw"Transaction Cancelled"}s.selected_outputs=[];var l=BigInteger.ZERO;for(var u=0;u<s.to_addresses.length;++u){l=l.add(s.to_addresses[u].value)}var w=false;for(var u=0;u<s.to_addresses.length;++u){var p=s.to_addresses[u];if(p.m!=null){w=true;break}}var f=BigInteger.ZERO;if(s.fee!=null){l=l.add(s.fee)}var z=0;var d=[];var g=[];var r=s.unspent;var n=false;for(var u=0;u<r.length;++u){var v=r[u];try{var o=new Bitcoin.Address(v.script.simpleOutPubKeyHash()).toString();if(o==null){throw"Unable to decode output address from transaction hash "+v.tx_hash}if(r!=g){if(u==r.length-1){r=g;u=-1}else{if(MyWallet.addressExists(o)&&MyWallet.isWatchOnly(o)){g.push(v);continue}}}if(s.from_addresses!=null&&$.inArray(o,s.from_addresses)==-1){continue}var m=Crypto.util.hexToBytes(v.tx_hash);var k=Crypto.util.bytesToBase64(Crypto.util.hexToBytes(v.tx_hash));var q=new Bitcoin.TransactionIn({outpoint:{hash:k,hexhash:m,index:v.tx_output_n,value:v.value},script:v.script,sequence:4294967295});if(v.value.compareTo(l)>=0){s.selected_outputs=[q];d=[o];z=v.value*v.confirmations;f=v.value;break}else{s.selected_outputs.push(q);d.push(o);z+=v.value*v.confirmations;f=f.add(v.value);if(f.compareTo(l)>=0){break}}}catch(y){MyWallet.makeNotice("info","tx-error",y)}}if(f.compareTo(l)<0){s.error("Insufficient funds. Value Needed "+formatBTC(l.toString())+" BTC. Available amount "+formatBTC(f.toString())+" BTC");return}if(s.selected_outputs.length==0){s.error("No Available Outputs To Spend.");return}var j=new Bitcoin.Transaction();for(var u=0;u<s.selected_outputs.length;u++){j.addInput(s.selected_outputs[u])}var t=false;for(var u=0;u<s.to_addresses.length;++u){var p=s.to_addresses[u];if(p.m!=null){j.addOutputScript(Bitcoin.Script.createMultiSigOutputScript(p.m,p.pubkeys),p.value)}else{j.addOutput(p.address,p.value)}if(p.value.compareTo(BigInteger.valueOf(1000000))<=0){n=true}}var x=f.subtract(l);if(x.compareTo(BigInteger.ZERO)>0){if(s.change_address!=null){j.addOutput(s.change_address,x)}else{if(d.length>0){j.addOutput(new Bitcoin.Address(d[Math.floor(Math.random()*d.length)]),x)}else{j.addOutput(new Bitcoin.Address(MyWallet.getPreferredAddress()),x)}}if(x.compareTo(BigInteger.valueOf(1000000))<=0){n=true}}var c=j.serialize(j).length+(114*j.ins.length);z/=c;var h=Math.ceil(parseFloat(c/1024));var A=(!s.fee||s.fee.compareTo(s.base_fee)<0);if(A&&n){if(h>1){s.fee=s.base_fee.multiply(BigInteger.valueOf(h))}else{s.fee=s.base_fee}s.makeTransaction()}else{if(A&&(z<57600000||h>1||w||t)){s.ask_for_fee(function(){if(h>1){s.fee=s.base_fee.multiply(BigInteger.valueOf(h))}else{s.fee=s.base_fee}s.makeTransaction()},function(){s.tx=j;s.determinePrivateKeys(function(){s.signInputs()})})}else{s.tx=j;s.determinePrivateKeys(function(){s.signInputs()})}}}catch(y){this.error(y)}},ask_for_fee:function(d,c){d()},determinePrivateKeys:function(l){var c=this;try{if(c.is_cancelled){throw"Transaction Cancelled"}var j={};for(var f in c.selected_outputs){var d=c.selected_outputs[f].script;if(d.priv_to_use==null){var h=d.simpleOutPubKeyHash();var g=new Bitcoin.Address(h).toString();if(j[g]){d.priv_to_use=j[g]}else{if(c.extra_private_keys[g]){d.priv_to_use=Bitcoin.Base58.decode(c.extra_private_keys[g])}else{if(MyWallet.addressExists(g)&&!MyWallet.isWatchOnly(g)){try{d.priv_to_use=MyWallet.decodePK(MyWallet.getPrivateKey(g))}catch(k){console.log(k)}}}}if(d.priv_to_use==null){c.ask_for_private_key(function(i){try{if(g==i.getBitcoinAddress().toString()||g==i.getBitcoinAddressCompressed().toString()){c.extra_private_keys[g]=Bitcoin.Base58.encode(i.priv);c.determinePrivateKeys(l)}else{throw"The private key you entered does not match the bitcoin address"}}catch(m){c.error(m)}},function(i){c.from_addresses=$.grep(c.from_addresses,function(m){return m!=g});c.makeTransaction()},g);return false}else{j[g]=d.priv_to_use}}}l()}catch(k){c.error(k)}},signWebWorker:function(k,h){try{var m=this;var d=0;var l=Math.min(3,m.tx.ins.length);m.worker=[];for(var c=0;c<l;++c){m.worker[c]=new Worker("/Resources/wallet/signer.min.js");m.worker[c].addEventListener("message",function(n){var i=n.data;try{switch(i.cmd){case"on_sign":m.invoke("on_sign_progress",parseInt(i.outputN)+1);m.tx.ins[i.outputN].script=new Bitcoin.Script(i.script);++d;if(d==m.tx.ins.length){m.terminateWorkers();k()}break;case"on_error":throw i.e}}catch(n){m.terminateWorkers();m.error(n)}},false);m.worker[c].addEventListener("error",function(i){h(i)})}for(var f in m.selected_outputs){var j=m.selected_outputs[f].script;m.worker[f%l].postMessage({cmd:"sign_input",tx:m.tx,outputN:f,priv_to_use:j.priv_to_use,connected_script:j})}}catch(g){h(g)}},signNormal:function(h,g){var d=this;var c=0;var f=function(){setTimeout(function(){if(d.is_cancelled){g();return}try{d.invoke("on_sign_progress",c+1);var i=d.selected_outputs[c].script;var k=signInput(d.tx,c,i.priv_to_use,i);if(k){d.tx.ins[c].script=k;++c;if(c==d.tx.ins.length){h()}else{f()}}else{throw"Unknown error signing transaction"}}catch(j){g(j)}},1)};f()},signInputs:function(){var c=this;try{c.invoke("on_begin_signing");var f=function(){c.invoke("on_finish_signing");c.is_ready=true;c.ask_to_send()};c.signWebWorker(f,function(g){console.log(g);c.signNormal(f,function(h){c.error(h)})})}catch(d){c.error(d)}},terminateWorkers:function(){if(this.worker){for(var c in this.worker){try{this.worker[c].terminate()}catch(d){}}}},cancel:function(){if(!this.has_pushed){this.terminateWorkers();this.error("Transaction Cancelled")}},send:function(){var c=this;if(c.is_cancelled){c.error("This transaction has already been cancelled");return}if(!c.is_ready){c.error("Transaction is not ready to send yet");return}c.invoke("on_before_send");if(c.generated_addresses.length>0){c.has_saved_addresses=true;MyWallet.backupWallet("update",function(){c.pushTx()},function(){c.error("Error Backing Up Wallet. Cannot Save Newly Generated Keys.")})}else{c.pushTx()}},pushTx:function(){var c=this;if(c.is_cancelled){return}c.has_pushed=true;BlockchainAPI.push_tx(c.tx,c.note,function(d){c.success(d)},function(d){c.error(d)})},ask_for_private_key:function(d,c){c("Cannot ask for private key without user interaction disabled")},ask_to_send:function(){this.send()},error:function(c){if(this.is_cancelled){return}this.is_cancelled=true;if(!this.has_pushed&&this.generated_addresses.length>0){for(var d in this.generated_addresses){MyWallet.deleteAddress(this.generated_addresses[d])}if(this.has_saved_addresses){MyWallet.backupWallet()}}this.invoke("on_error",c)},success:function(){this.invoke("on_success")}};var a={on_error:function(c){if(c){MyWallet.makeNotice("error","tx-error",c)}$(".send-value,.send").attr("disabled",false)},on_success:function(c){$(".send-value,.send").attr("disabled",false)},on_start:function(c){$(".send-value,.send").attr("disabled",true)},on_begin_signing:function(){this.start=new Date().getTime()},on_finish_signing:function(){console.log("Took "+(new Date().getTime()-this.start)+"ms")}};b.addListener(a);return b};